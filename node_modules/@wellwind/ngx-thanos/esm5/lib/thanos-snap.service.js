/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { thanosRewind, thanosSnap } from '@wellwind/thanos-snap';
import { from } from 'rxjs';
import * as i0 from "@angular/core";
var ThanosSnapService = /** @class */ (function () {
    function ThanosSnapService() {
    }
    /**
     * @param {?} target
     * @return {?}
     */
    ThanosSnapService.prototype.snap = /**
     * @param {?} target
     * @return {?}
     */
    function (target) {
        return from(thanosSnap(target));
    };
    /**
     * @param {?} target
     * @return {?}
     */
    ThanosSnapService.prototype.rewind = /**
     * @param {?} target
     * @return {?}
     */
    function (target) {
        return from(thanosRewind(target));
    };
    ThanosSnapService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ThanosSnapService.ctorParameters = function () { return []; };
    /** @nocollapse */ ThanosSnapService.ngInjectableDef = i0.defineInjectable({ factory: function ThanosSnapService_Factory() { return new ThanosSnapService(); }, token: ThanosSnapService, providedIn: "root" });
    return ThanosSnapService;
}());
export { ThanosSnapService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhhbm9zLXNuYXAuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B3ZWxsd2luZC9uZ3gtdGhhbm9zLyIsInNvdXJjZXMiOlsibGliL3RoYW5vcy1zbmFwLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUU1QjtJQUtFO0lBQWdCLENBQUM7Ozs7O0lBRWpCLGdDQUFJOzs7O0lBQUosVUFBSyxNQUFtQjtRQUN0QixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVELGtDQUFNOzs7O0lBQU4sVUFBTyxNQUFtQjtRQUN4QixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDOztnQkFiRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7Ozs0QkFORDtDQWtCQyxBQWRELElBY0M7U0FYWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHRoYW5vc1Jld2luZCwgdGhhbm9zU25hcCB9IGZyb20gJ0B3ZWxsd2luZC90aGFub3Mtc25hcCc7XHJcbmltcG9ydCB7IGZyb20gfSBmcm9tICdyeGpzJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFRoYW5vc1NuYXBTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgc25hcCh0YXJnZXQ6IEhUTUxFbGVtZW50KSB7XHJcbiAgICByZXR1cm4gZnJvbSh0aGFub3NTbmFwKHRhcmdldCkpO1xyXG4gIH1cclxuXHJcbiAgcmV3aW5kKHRhcmdldDogSFRNTEVsZW1lbnQpIHtcclxuICAgIHJldHVybiBmcm9tKHRoYW5vc1Jld2luZCh0YXJnZXQpKTtcclxuICB9XHJcbn1cclxuIl19