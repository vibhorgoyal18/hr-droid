{"version":3,"file":"wellwind-ngx-thanos.js.map","sources":["ng://@wellwind/ngx-thanos/lib/thanos-snap.service.ts","ng://@wellwind/ngx-thanos/lib/thanos-snap.directive.ts","ng://@wellwind/ngx-thanos/lib/ngx-thanos.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { thanosRewind, thanosSnap } from '@wellwind/thanos-snap';\r\nimport { from } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThanosSnapService {\r\n\r\n  constructor() { }\r\n\r\n  snap(target: HTMLElement) {\r\n    return from(thanosSnap(target));\r\n  }\r\n\r\n  rewind(target: HTMLElement) {\r\n    return from(thanosRewind(target));\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { ThanosSnapService } from './thanos-snap.service';\r\n\r\n@Directive({\r\n  selector: '[ngxThanosSnap]',\r\n  exportAs: 'ngxThanosSnap'\r\n})\r\nexport class ThanosSnapDirective implements OnChanges {\r\n\r\n  @Input() ngxThanosSnap = false;\r\n\r\n  @Output() snapStarting = new EventEmitter<void>();\r\n  @Output() snapEnded = new EventEmitter<void>();\r\n  @Output() rewinded = new EventEmitter<void>();\r\n\r\n  get host(): HTMLElement {\r\n    return this.elementRef.nativeElement\r\n  }\r\n\r\n  constructor(private elementRef: ElementRef, private thanosSnapService: ThanosSnapService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.ngxThanosSnap) {\r\n      this.snap();\r\n    } else {\r\n      this.rewind()\r\n    }\r\n  }\r\n\r\n  snap() {\r\n    this.snapStarting.emit();\r\n    this.thanosSnapService.snap(this.host).subscribe(() => this.snapEnded.emit());\r\n  }\r\n\r\n  rewind() {\r\n    this.thanosSnapService.rewind(this.host).subscribe(() => this.rewinded.emit());\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ThanosSnapDirective } from './thanos-snap.directive';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ThanosSnapDirective],\r\n  exports: [ThanosSnapDirective]\r\n})\r\nexport class NgxThanosModule {}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA,MAOa,iBAAiB;IAE5B,iBAAiB;;;;;IAEjB,IAAI,CAAC,MAAmB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;KACjC;;;;;IAED,MAAM,CAAC,MAAmB;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;KACnC;;;YAbF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACND,MAOa,mBAAmB;;;;;IAY9B,YAAoB,UAAsB,EAAU,iBAAoC;QAApE,eAAU,GAAV,UAAU,CAAY;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAV/E,kBAAa,GAAG,KAAK,CAAC;QAErB,iBAAY,GAAG,IAAI,YAAY,EAAQ,CAAC;QACxC,cAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;QACrC,aAAQ,GAAG,IAAI,YAAY,EAAQ,CAAC;KAM+C;;;;IAJ7F,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAA;KACrC;;;;IAID,WAAW;QACT,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,EAAE,CAAA;SACd;KACF;;;;IAED,IAAI;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,CAAC;KAC/E;;;;IAED,MAAM;QACJ,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAC,CAAC;KAChF;;;YAjCF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE,eAAe;aAC1B;;;;YANmB,UAAU;YACrB,iBAAiB;;;4BAQvB,KAAK;2BAEL,MAAM;wBACN,MAAM;uBACN,MAAM;;;;;;;ACbT,MASa,eAAe;;;YAL3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,mBAAmB,CAAC;gBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;aAC/B;;;;;;;;;;;;;;;"}
